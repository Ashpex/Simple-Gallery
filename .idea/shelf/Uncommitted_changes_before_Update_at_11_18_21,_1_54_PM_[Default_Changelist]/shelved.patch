Index: app/src/main/java/com/example/testgallery/adapters/ItemAlbumAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.testgallery.adapters;\n\nimport android.content.Context;\nimport android.content.Intent;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.Filter;\nimport android.widget.Filterable;\nimport android.widget.ImageView;\n\nimport androidx.annotation.NonNull;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport com.bumptech.glide.Glide;\nimport com.example.testgallery.activities.mainActivities.PictureActivity;\nimport com.example.testgallery.R;\n\n\n\nimport java.util.ArrayList;\n\npublic class ItemAlbumAdapter extends RecyclerView.Adapter<ItemAlbumAdapter.ItemAlbumViewHolder> {\n    private ArrayList<String> album;\n    //private  ArrayList<String> getAlbumFiltered;\n    private Context context;\n\n    public ItemAlbumAdapter(ArrayList<String> album) {\n        this.album = album;\n        //this.getAlbumFiltered = album;\n    }\n\n\n    @NonNull\n    @Override\n    public ItemAlbumViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_picture, parent, false);\n\n        return new ItemAlbumViewHolder(view);\n    }\n\n    @Override\n    public void onBindViewHolder(@NonNull ItemAlbumViewHolder holder, int position) {\n        holder.onBind(album.get(position));\n    }\n\n    @Override\n    public int getItemCount() {\n        return album.size();\n    }\n\n/*    @Override\n    public Filter getFilter() {\n        Filter filter = new Filter() {\n            @Override\n            protected FilterResults performFiltering(CharSequence charSequence) {\n                FilterResults filterResults = new FilterResults();\n                if(charSequence == null | charSequence.length() == 0){\n                    filterResults.count = getAlbumFiltered.size();\n                    filterResults.values = getAlbumFiltered;\n                }\n                else{\n                    String searchChr = charSequence.toString().toLowerCase();\n                    ArrayList<String> resultData = new ArrayList<>();\n                    for(String album: getAlbumFiltered){\n                        if (album.toLowerCase().contains(searchChr)){\n                            resultData.add(album);\n                        }\n                    }\n                    filterResults.count = resultData.size();\n                    filterResults.values = resultData;\n                }\n                return filterResults;\n            }\n\n            @Override\n            protected void publishResults(CharSequence charSequence, FilterResults filterResults) {\n                album = (ArrayList<String>) filterResults.values;\n                notifyDataSetChanged();\n            }\n        };\n        return filter;\n    }*/\n\n    class ItemAlbumViewHolder extends RecyclerView.ViewHolder {\n        private ImageView imgPhoto;\n        private Context context;\n        public ItemAlbumViewHolder(@NonNull View itemView) {\n            super(itemView);\n            context = itemView.getContext();\n            imgPhoto = itemView.findViewById(R.id.imgPhoto);\n        }\n        public void onBind(String img) {\n            // set ảnh cho imgPhoto bằng thư viện Glide\n            Glide.with(context).load(img).into(imgPhoto);\n            imgPhoto.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View view) {\n                    Intent intent = new Intent(context, PictureActivity.class);\n                    intent.putStringArrayListExtra(\"data_list_path\", album);\n                    intent.putStringArrayListExtra(\"data_list_thumb\", album);\n                    intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n                    context.startActivity(intent);\n                }\n            });\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/testgallery/adapters/ItemAlbumAdapter.java b/app/src/main/java/com/example/testgallery/adapters/ItemAlbumAdapter.java
--- a/app/src/main/java/com/example/testgallery/adapters/ItemAlbumAdapter.java	(revision 20daf2b7dde7d4b8e77b1cb6652795b69b38714a)
+++ b/app/src/main/java/com/example/testgallery/adapters/ItemAlbumAdapter.java	(date 1637218455831)
@@ -22,12 +22,10 @@
 
 public class ItemAlbumAdapter extends RecyclerView.Adapter<ItemAlbumAdapter.ItemAlbumViewHolder> {
     private ArrayList<String> album;
-    //private  ArrayList<String> getAlbumFiltered;
     private Context context;
 
     public ItemAlbumAdapter(ArrayList<String> album) {
         this.album = album;
-        //this.getAlbumFiltered = album;
     }
 
 
@@ -49,38 +47,7 @@
         return album.size();
     }
 
-/*    @Override
-    public Filter getFilter() {
-        Filter filter = new Filter() {
-            @Override
-            protected FilterResults performFiltering(CharSequence charSequence) {
-                FilterResults filterResults = new FilterResults();
-                if(charSequence == null | charSequence.length() == 0){
-                    filterResults.count = getAlbumFiltered.size();
-                    filterResults.values = getAlbumFiltered;
-                }
-                else{
-                    String searchChr = charSequence.toString().toLowerCase();
-                    ArrayList<String> resultData = new ArrayList<>();
-                    for(String album: getAlbumFiltered){
-                        if (album.toLowerCase().contains(searchChr)){
-                            resultData.add(album);
-                        }
-                    }
-                    filterResults.count = resultData.size();
-                    filterResults.values = resultData;
-                }
-                return filterResults;
-            }
 
-            @Override
-            protected void publishResults(CharSequence charSequence, FilterResults filterResults) {
-                album = (ArrayList<String>) filterResults.values;
-                notifyDataSetChanged();
-            }
-        };
-        return filter;
-    }*/
 
     class ItemAlbumViewHolder extends RecyclerView.ViewHolder {
         private ImageView imgPhoto;
